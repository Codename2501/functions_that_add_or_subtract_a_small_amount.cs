using System.Numerics;

class starting_point
{
    public starting_point()
    {
        Complex da = Complex.Pow(10.0,-10);
        int m = 100000;
        Complex x = 15.0;//A threshold exists depending on the function.
        Complex x2;
        Complex sum = 0.0;//Function sum
        int h = 0;

        for (h = 0; h <= m; h++)
        {
            sum += Function(x+h*da*Complex.ImaginaryOne)*da;
        }    
            
        x2 = x + (((m + 1 + m * (m + 1) / 2.0) * da) / (m + 1 + ((m + 1 + m * (m + 1) / 2.0) * da)))*Complex.ImaginaryOne;

        Console.WriteLine("{0} {1} {2} {3}\n", sum, (m+1) * Function(x2)*da*(da+1),Integral(x+(m+1)*da)-Integral(x));

    }
    private Complex Integral(Complex x)
    {
        return -Complex.Cos(x);
    }
    private Complex Function(Complex x)
    {
        //Any elementary function is generally acceptable in any form.
        //return Complex.Sin(x);
        return Complex.Sin(x);
    }
    [STAThread]
    public static void Main()
    {
        new starting_point();
    }
}
